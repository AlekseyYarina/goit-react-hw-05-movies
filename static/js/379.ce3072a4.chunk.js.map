{"version":3,"file":"static/js/379.ce3072a4.chunk.js","mappings":"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","sources":["pages/SearchMoviePage.jsx","servises/api.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { requestSearchMovies } from '../servises/api';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst SearchMoviePage = () => {\n  const [searchResults, setSearchResults] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n\n  const query = searchParams.get('sQuery');\n  const [searchValue, setSearchValue] = useState(query ?? '');\n\n  const handleSearch = useCallback(async () => {\n    try {\n      const searchResultData = await requestSearchMovies(searchValue);\n      setSearchResults(searchResultData);\n    } catch (error) {\n      console.error('Error fetching search results:', error);\n    }\n\n    setSearchParams({\n      sQuery: searchValue,\n    });\n  }, [searchValue, setSearchParams]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleSearch();\n  };\n\n  useEffect(() => {\n    if (query) {\n      handleSearch();\n    }\n  }, [query, handleSearch]);\n\n  return (\n    <div>\n      <h2>Search Movies</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          defaultValue={query}\n          onChange={e => setSearchValue(e.target.value)}\n          required\n        />\n        <button type=\"submit\" onClick={handleSearch}>\n          Search\n        </button>\n      </form>\n\n      {searchResults ? (\n        <ul>\n          {searchResults.results.map(movie => (\n            <li key={movie.id}>\n              <Link state={{ from: location }} to={`/movies/${movie.id}`}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No search results</p>\n      )}\n    </div>\n  );\n};\n\nexport default SearchMoviePage;\n","import axios from 'axios';\n\nconst API_KEY = 'e065dfec6f2e6d76c57b93ce16d955ed';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst options = {\n  api_key: API_KEY,\n  AUTH_TOKEN:\n    'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlMDY1ZGZlYzZmMmU2ZDc2YzU3YjkzY2UxNmQ5NTVlZCIsInN1YiI6IjY1YTkzOGMyZDRhNjhiMDEzNmRjZjUxZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.tauyXFwNT9oons4hS9WveRHTZQkJhDEkLRhMB19ofcY',\n};\naxios.defaults.headers.common['Authorization'] = options.AUTH_TOKEN;\n\nexport const requestTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get(`${BASE_URL}/trending/movie/day`);\n    return data.results;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const requestMovieById = async movieId => {\n  try {\n    const { data } = await axios.get(`${BASE_URL}/movie/${movieId}`);\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const requestMovieCast = async id => {\n  try {\n    const { data } = await axios.get(`${BASE_URL}/movie/${id}/credits`);\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    throw error;\n  }\n};\n\nexport const requestMovieReviews = async id => {\n  try {\n    const { data } = await axios.get(`${BASE_URL}/movie/${id}/reviews`);\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const requestSearchMovies = async searchTerm => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?query=${searchTerm}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n"],"names":["_useState","useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","query","get","_useState3","_useState4","searchValue","setSearchValue","handleSearch","useCallback","_asyncToGenerator","_regeneratorRuntime","_callee","searchResultData","_context","prev","next","requestSearchMovies","sent","t0","console","error","sQuery","stop","useEffect","_jsxs","children","_jsx","onSubmit","e","preventDefault","type","defaultValue","onChange","target","value","required","onClick","results","map","movie","Link","state","from","to","concat","id","title","BASE_URL","options","axios","requestTrendingMovies","_ref","_yield$axios$get","data","abrupt","apply","arguments","requestMovieById","_ref2","_callee2","movieId","_yield$axios$get2","_context2","_x","requestMovieCast","_ref3","_callee3","_yield$axios$get3","_context3","_x2","requestMovieReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x3","_ref5","_callee5","searchTerm","response","_context5","_x4"],"sourceRoot":""}